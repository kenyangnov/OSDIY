叠加处理：通过将图层一层层由下向上描绘实现。

我们新建了两个结构：
	sheet---记录图层信息和属性
	SHTCTL---记录多重图层信息的结构


另外SHTCTL中的sheets成员：是将sheet0[i]中的顺序混乱的图层按照高度进行升序排序，然后将地址写入sheets，十分巧妙。如果没有这个结构，每次有个图层的高度变化了，就要将整个表进行遍历排序，非常耗时。这个方法用小空间换取大量时间。在sheet_updown()函数中可以清楚的看到它的作用。

&cl1->sheets0[i]是“cl1->sheets0[i]的地址”的意思。也就是说，是指&(cl1->sheets0[i])，而不是(&cl1)->sheets0[i]

对于已经设定高度的所有图层而言，要从下往上，将透明色以外的所有像素都复制到VRAM中去。由于是从下向上开始复制buf到vram，所以最后最上面的内容就留在了画面上。

我们将图层相关的程序汇总到了sheet.c中。

应当注意这里的图层以及一些其他信息都是需要在内存中分配空间的。


叠加部分处理思路还不是很清晰，慢慢理解。。。先继续往后看