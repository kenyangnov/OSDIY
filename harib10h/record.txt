这一节，我们做的还是加快中断处理。两个工作：

一是优化20号中断服务程序，因为经过之前的工作，我们现在的计时器已经是有序的了，所以对于timers[]数组，我们只需要查看和处理timers[0]。

二是修改timer_settime函数,我们通过链表结构将每个计时器连接，这样就加快了增删操作，之前的顺序表结构必须每次都进行移位操作，消耗了很多时间。

这里的timer->next和timerctl.next很容易混淆，前者是指下一个定时器的地址，而后者是指下一个超时的时刻。